generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

// User model
model User {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  name           String?
  email          String?   @unique
  emailVerified  DateTime?
  image          String?
  hashedPassword String?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt

  userType UserType @default(CLIENT)

  managedProjects Project[]
  accounts        Account[]
}

// Account model
model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

// Client model
model Client {
  id    String  @id @default(auto()) @map("_id") @db.ObjectId
  name  String
  email String  @unique
  phone String?

  Project   Project @relation(fields: [projectId], references: [id])
  projectId String  @db.ObjectId
}

// Project model
model Project {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  managerId String @db.ObjectId

  name        String
  description String

  projectType ProjectType @default(INTERNAL)

  client Client[]
  lead   User     @relation(fields: [leadId], references: [id])
  leadId String   @db.ObjectId
}

// Enums for the models
enum UserType {
  CLIENT
  STAFF
  ADMIN
}

enum ProjectType {
  INTERNAL
  EXTERNAL
}
